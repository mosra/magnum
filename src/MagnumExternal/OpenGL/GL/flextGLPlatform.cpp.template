@require(passthru, functions, enums, options, version, extensions)
/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
                2020, 2021 Vladimír Vondruš <mosra@@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

#include "flextGL.h"

#include <cstdio>
#include <cstdlib>

#include "Magnum/Platform/Implementation/OpenGLFunctionLoader.h"

#ifdef MAGNUM_PLATFORM_USE_EGL
#include <cstring>
#include <EGL/egl.h>
#include <Corrade/Containers/StringView.h>
#include "Magnum/GL/Context.h"
#endif

void flextGLInit(Magnum::GL::Context& context) {
    Magnum::Platform::Implementation::OpenGLFunctionLoader loader;

    #ifdef MAGNUM_PLATFORM_USE_EGL
    {
        using namespace Corrade::Containers::Literals;

        /* EGL contexts on NVidia 390 drivers don't have correct statically
           linked GL 1.0 and 1.1 functions (such as glGetString()) and one has
           to retrieve them explicitly using eglGetProcAddress(). */
        EGLDisplay display = eglGetCurrentDisplay();
        const char* vendor = eglQueryString(display, EGL_VENDOR);
        if(std::strcmp(vendor, "NVIDIA") == 0 && !context.isDriverWorkaroundDisabled("nv-egl-incorrect-gl11-function-pointers"_s)) {
            @for category,funcs in functions:
            @if funcs and category in ['VERSION_1_0', 'VERSION_1_1']:

            /* GL_@category */
            @for f in funcs:
            flextGL.@f.name = reinterpret_cast<@f.returntype\
(APIENTRY*)(@f.param_type_list_string())>(loader.load("gl@f.name"));
            @end
            @end
            @end
        }
    }
    #else
    static_cast<void>(context);
    #endif
    @for category,funcs in functions:
    @if funcs and category not in ['VERSION_1_0', 'VERSION_1_1']:

    /* GL_@category */
    @for f in funcs:
    flextGL.@f.name = reinterpret_cast<@f.returntype\
(APIENTRY*)(@f.param_type_list_string())>(loader.load("gl@f.name"));
    @end
    @end
    @end
}
